function! Make(args)
	exec "make" . a:args
	if !empty(filter(getqflist(), 'match(v:val.text, "Success") >= 0'))
		echo "Compilation succeeded!"
	else
		echo "Compilation failed!"
	endif
endfunction

function! RunCompiler(args)
	if empty(a:args) == 0
		let g:compiler_args = a:args
	endif
	exec "!bin/Compiler " . g:compiler_args . " & pause"
endfunction

set makeprg=./build.sh

command! Build :call Make("")
command! BuildR :call Make("-r")
command! -nargs=* -complete=file Run :call RunCompiler("<args>")
command! Test :!output/out & pause

" Ignore build folder in wildcards
set wildignore+=*/build/*
set wildignore+=*/bin/*

let g:termdebug_wide = 163
highlight clear debugPC
highlight debugPC ctermbg=237

function SetUpDebugger()
	delcommand Run
	Termdebug bin/Compiler
	3wincmd l
	wincmd H
endfunction

packadd termdebug
command! Debug :call SetUpDebugger()

au User TermdebugStopPost command! -nargs=* -complete=file Run :execute "!" . g:run_command . " <args>"

* Add current procedure to Context in x64.cpp instead of passing it around.
* Maybe remove size from Token?
* Include SourceLocations on IRInstructions and BackendInstructions to better track compiler errors.
* Hash tables for register allocation lookups.
* Maybe store local IRValues per procedure instead of all in a huge array. Should improve register
    allocation performance and reduce cache misses in general.
* Proper error handling when the wrong kind of thing is fed to operators (example: dividing by a type).
* Reduce moving things from one register to another unnecessarily
* Verify small structs are passed properly through parameters
* Return statements are being evaluated before deferred statements!
* Replace big inline zeroing/initializing with static data
* Maybe initialize string structs inline instead of having all of them as static data
* For known procedures, check what registers it uses and only save those upon calling it
* CodeGen: Flip operands when possible to avoid movs (e.g. immediate in cmp left hand)

AProc :: #inline ()
{
	Print("Hey there\n");
}

Params :: #inline (five : u32, threeHalves : f32, big : u64)
{
	PrintF("Inlined arguments: %, %, %\n", five, threeHalves, big);
}

ReturnSomething :: #inline () -> s32
{
	return 25;
}

Square :: struct
{
	side : f32;
	area : f32;
};
StructParam :: #inline (square : Square)
{
	square.area = square.side * square.side;
}

/*
Cyclic :: #inline (i : s32)
{
	if i > 0 Cyclic(i - 1);
}

CyclicA :: #inline (i : s32)
{
	if i > 0 CyclicB(i - 1);
}
CyclicB :: #inline (i : s32)
{
	if i > 0 CyclicA(i - 1);
}
*/

Main :: () -> s64
{
	AProc();
	Params(5, 1.5, 123456789);
	inlineRet := ReturnSomething();
	PrintF("Inline return: %\n", inlineRet);

	square : Square = { 5.0 };
	StructParam(square);
	PrintF("Square of side % has area %\n", square.side, square.area);

	Print("Test ok\n");
	return 0;
}

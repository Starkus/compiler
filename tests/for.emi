Main :: () -> s64
{
	// Range
	for 0..4
	{
		foo := i;
		PrintF("i = %;  ", i);
	}
	Print("\n");

	// Array
	array : [4] s32;
	for array
	{
		foo := i;
		bar : s32 = @it;
		array[i] = cast(s32) (i * i);

		PrintF("i = %, it = %;  ", i, @it);
	}
	Print("\n");

	// Dynamic array
	dynamicArray : [] s32;
	dynamicArray.size = 4;
	dynamicArray.data = ^array;
	for dynamicArray
	{
		foo := i;
		bar : s32 = @it;
		array[i] = cast(s32) (i * 2);

		PrintF("i = %, it = %;  ", i, @it);
	}
	Print("\n");

	// Complex expression that evaluates to an array
	arrayHolder : struct { ptrToArray : ^[] s32; };
	arrayHolder.ptrToArray = ^dynamicArray;
	for (@arrayHolder.ptrToArray)
	{
		PrintF("i = %, it = %;  ", i, @it);
	}
	Print("\n");

	// Continue test
	for 0..16
	{
		if i % 2 continue;
		PrintF("i = %, ", i);
	}
	Print("\n");

	Print("Test ok\n");
	return 0;
}

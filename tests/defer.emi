counter :s= 0;
error   :s= 0;

DoStep :: (index : s64, msg : String)
{
	if counter != index
	{
		Print("Error!\n");
		error = 1;
	}
	Print(msg);
	counter += 1;
}

Main :: (args : [] String) -> s64
{
	DoStep(0, "Program start\n");
	foo : s64 = 4;
	defer DoStep(5, "I should be at the bottom\n");
	defer foo = 8;

	innerFunc :: () -> s64
	{
		return 8;
	}

	if (foo == 5)
	{
		return 1;
	}

	{
		dumbScope := 90;
	}

	bar : s64 = 256;
	{
		DoStep(1, "Entering a scope\n");
		defer bar = 0;
		defer DoStep(3, "Scope defer\n");
		foo = 7;
		DoStep(2, "Leaving scope\n");
	}

	DoStep(4, "Program finishing\n");

	if (error == 0)
		Print("Test ok\n");
	return error;
}

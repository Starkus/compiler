arrayAsArgument :: (array : [5] s16)
{
	foo := array[3];
}

returnArray :: (arg2 : s32) -> [4] s32
{
	array : [4] s32;
	for array
		array[i] = cast(s32)i * 2;
	return array;
}

Main :: () -> s64
{
	arrayA : [5] u8;
	arrayB : [8] s32;

	for 0..5
		arrayA[i] = cast(u8) i;
	PrintF("arrayA: %\n", arrayA);
	for arrayA
		if @it != cast(u8) i return 1;

	for (arrayB) @it = cast(s32)(1 << i);
	for arrayB
		if @it != cast(s32)(1 << i) return 1;
	PrintF("arrayB: %\n", arrayB);

	foo : u8 = arrayA[2];
	bar := arrayB[16];

	arrayC : [5] s16;
	arrayAsArgument(arrayC);

	arrayOfPointers : [8] ^u8;
	asd := arrayOfPointers[2];

	baz := arrayA[arrayB[5]];

	arrayOfArrays : [16] [16] u8;
	row : ^[16] u8 = ^arrayOfArrays[3];
	cell := row[7];
	anotherCell := arrayOfArrays[5][5];

	copyOfA := arrayA;
	for copyOfA
		if @it != arrayA[i] return 1;

	returnedArray := returnArray(24);
	PrintF("returnedArray: %\n", returnedArray);
	for returnedArray
		if @it != cast(s32)(i * 2) return 1;

	dynamicArray : [] s32 = ?;
	dynamicArray = arrayB;
	PrintF("dynamicArray: %\n", dynamicArray);
	for dynamicArray
	{
		PrintF("%: % == %\n", i, dynamicArray[i], arrayB[i]);
		if @it != arrayB[i] return 1;
	}

	anIndex := 4;
	arrayA[anIndex] = 5;
	PrintF("arrayA but last one is 5: %\n", arrayA);

	Print("Test ok\n");
	return 0;
}

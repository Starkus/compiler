arrayAsArgument :: (array : [5] s16)
{
	foo := array[3];
}

returnArray :: () -> [4] s32
{
	array : [4] s32;
	i : s32 = 0;
	while i < 4
	{
		array[i] = i;
		i += 1;
	}
	return array;
}

Main :: () -> s64
{
	arrayA : [5] u8;
	arrayB : [8] s32;

	for 0..5
	{
		arrayA[i] = cast(u8) i;
		PrintF("Array[%] = %\n", i, arrayA[i]);
	}

	for (arrayB) @it = cast(s32)(1 << i);

	foo : u8 = arrayA[2];
	bar := arrayB[16];

	arrayC : [5] s16;
	arrayAsArgument(arrayC);

	arrayOfPointers : [8] ^u8;
	asd := arrayOfPointers[2];

	baz := arrayA[arrayB[5]];

	arrayOfArrays : [16] [16] u8;
	row : ^[16] u8 = ^arrayOfArrays[3];
	cell := row[7];
	anotherCell := arrayOfArrays[5][5];

	copyOfA := arrayA;

	returnedArray := returnArray();

	dynamicArray : [] s32;
	dynamicArray = arrayB;
	for dynamicArray
	{
		PrintF("Dynamic array[%] = %\n", i, @it);
	}

	return 0;
}

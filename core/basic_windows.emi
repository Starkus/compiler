compiler_platform :: COMPILER_PLATFORM_WINDOWS;

GetStdHandle :: #external #convention(win64) (handle: s64) -> s64;
WriteFile :: #external #convention(win64) (handle: s64, buffer: ^void, bytesToWrite: s64, bytesWritten: ^s64,
		overlapped: ^void) -> bool;
ExitProcess :: #external #convention(win64) (uExitCode : u32);

Print :: (string: String)
{
	stdOut := GetStdHandle(-11);
	bytesWritten: s64 = ?;
	WriteFile(stdOut, string.data, cast(s64) string.size, ^bytesWritten, 0);
}

#if compiler_output_type == COMPILER_OUTPUT_EXECUTABLE
__WindowsMain :: #export ()
{
	errorCode : s64 = Main();
	ExitProcess(cast(u32)errorCode);
}

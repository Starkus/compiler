__ImageBase : #external ^void;

INVALID_HANDLE_VALUE :: 0xFFFFFFFFFFFFFFFF;
MEM_COMMIT      :: 0x00001000;
MEM_RESERVE     :: 0x00002000;
MEM_RESET       :: 0x00080000;
MEM_TOP_DOWN    :: 0x00100000;
MEM_WRTIE_WATCH :: 0x00200000;
MEM_PHYSICAL    :: 0x00400000;
MEM_RESET_UNDO  :: 0x01000000;
MEM_LARGE_PAGES :: 0x20000000;
MEM_DECOMMIT    :: 0x00004000;
MEM_RELEASE     :: 0x00008000;
PAGE_NOACCESS          :: 0x01;
PAGE_READONLY          :: 0x02;
PAGE_READWRITE         :: 0x04;
PAGE_WRITECOPY         :: 0x08;
PAGE_EXECUTE           :: 0x10;
PAGE_EXECUTE_READ      :: 0x20;
PAGE_EXECUTE_READWRITE :: 0x40;
PAGE_EXECUTE_WRITECOPY :: 0x80;
PAGE_GUARD             :: 0x100;
PAGE_NOCACHE           :: 0x200;
PAGE_WRITECOMBINE      :: 0x400;
PAGE_TARGETS_INVALID   :: 0x40000000;
PAGE_TARGETS_NO_UPDATE :: 0x40000000;
GENERIC_READ    :: 0x80000000;
GENERIC_WRITE   :: 0x40000000;
GENERIC_EXECUTE :: 0x20000000;
GENERIC_ALL     :: 0x10000000;
CREATE_NEW        :: 1;
CREATE_ALWAYS     :: 2;
OPEN_EXISTING     :: 3;
OPEN_ALWAYS       :: 4;
TRUNCATE_EXISTING :: 5;
FILE_SHARE_READ   :: 1;
FILE_SHARE_WRITE  :: 2;
FILE_SHARE_DELETE :: 4;
FILE_ATTRIBUTE_READONLY  :: 0x1;
FILE_ATTRIBUTE_HIDDEN    :: 0x2;
FILE_ATTRIBUTE_SYSTEM    :: 0x4;
FILE_ATTRIBUTE_ARCHIVE   :: 0x20;
FILE_ATTRIBUTE_NORMAL    :: 0x80;
FILE_ATTRIBUTE_TEMPORARY :: 0x100;
FILE_ATTRIBUTE_OFFLINE   :: 0x1000;
FILE_ATTRIBUTE_ENCRYPTED :: 0x4000;
ATTACH_PARENT_PROCESS :: -1;
WS_TILED            :: 0x00000000;
WS_OVERLAPPED       :: 0x00000000;
WS_MAXIMIZEBOX      :: 0x00010000;
WS_TABSTOP          :: 0x00010000;
WS_GROUP            :: 0x00020000;
WS_MINIMIZEBOX      :: 0x00020000;
WS_THICKFRAME       :: 0x00040000;
WS_SIZEBOX          :: 0x00040000;
WS_SYSMENU          :: 0x00080000;
WS_HSCROLL          :: 0x00100000;
WS_VSCROLL          :: 0x00200000;
WS_DLGFRAME         :: 0x00400000;
WS_BORDER           :: 0x00800000;
WS_CAPTION          :: 0x00C00000;
WS_MAXIMIZE         :: 0x01000000;
WS_CLIPCHILDREN     :: 0x02000000;
WS_CLIPSIBLINGS     :: 0x04000000;
WS_DISABLED         :: 0x08000000;
WS_VISIBLE          :: 0x10000000;
WS_ICONIC           :: 0x20000000;
WS_MINIMIZE         :: 0x20000000;
WS_CHILD            :: 0x40000000;
WS_CHILDWINDOW      :: 0x40000000;
WS_POPUP            :: 0x80000000;
WS_OVERLAPPEDWINDOW :: WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX;
CS_VREDRAW :: 0x0001;
CS_HREDRAW :: 0x0002;
CS_OWNDC   :: 0x0020;
SW_SHOW    :: 5;
PM_REMOVE  :: 0x0001;
WM_DESTROY :: 0x0002;
WM_SIZE    :: 0x0005;
WM_CLOSE   :: 0x0010;
WM_QUIT    :: 0x0012;
WM_KEYDOWN :: 0x0100;
WM_KEYUP   :: 0x0101;
PFD_DOUBLEBUFFER   :: 0x00000001;
PFD_DRAW_TO_WINDOW :: 0x00000004;
PFD_SUPPORT_OPENGL :: 0x00000020;
PFD_TYPE_RGBA :: 0;

// Virtual Keys, Standard Set
VK_LBUTTON :: 0x01;
VK_RBUTTON :: 0x02;
VK_CANCEL :: 0x03;
VK_MBUTTON :: 0x04;    /* NOT contiguous with L & RBUTTON */
VK_XBUTTON1 :: 0x05;    /* NOT contiguous with L & RBUTTON */
VK_XBUTTON2 :: 0x06;    /* NOT contiguous with L & RBUTTON */
VK_BACK :: 0x08;
VK_TAB :: 0x09;
VK_CLEAR :: 0x0C;
VK_RETURN :: 0x0D;
VK_SHIFT :: 0x10;
VK_CONTROL :: 0x11;
VK_MENU :: 0x12;
VK_PAUSE :: 0x13;
VK_CAPITAL :: 0x14;
VK_KANA :: 0x15;
VK_HANGEUL :: 0x15;  /* old name - should be here for compatibility */
VK_HANGUL :: 0x15;
VK_JUNJA :: 0x17;
VK_FINAL :: 0x18;
VK_HANJA :: 0x19;
VK_KANJI :: 0x19;
VK_ESCAPE :: 0x1B;
VK_CONVERT :: 0x1C;
VK_NONCONVERT :: 0x1D;
VK_ACCEPT :: 0x1E;
VK_MODECHANGE :: 0x1F;
VK_SPACE :: 0x20;
VK_PRIOR :: 0x21;
VK_NEXT :: 0x22;
VK_END :: 0x23;
VK_HOME :: 0x24;
VK_LEFT :: 0x25;
VK_UP :: 0x26;
VK_RIGHT :: 0x27;
VK_DOWN :: 0x28;
VK_SELECT :: 0x29;
VK_PRINT :: 0x2A;
VK_EXECUTE :: 0x2B;
VK_SNAPSHOT :: 0x2C;
VK_INSERT :: 0x2D;
VK_DELETE :: 0x2E;
VK_HELP :: 0x2F;

WNDCLASSEXA :: struct
{
	cbSize : u32;
	style : u32;
	lpfnWndProc : (hWnd : ^void, uMsg : u32, wParam : u64, lParam : u64) -> u64;
	cbClsExtra : s32;
	cbWndExtra : s32;
	hInstance : ^void;
	hIcon : ^void;
	hCursor : ^void;
	hBrush : ^void;
	lpszMenuName : ^u8;
	lpszClassName : ^u8;
	hIconSm : ^void;
};
POINT :: struct
{
	x : s32;
	y : s32;
};
MSG :: struct
{
	hWnd : ^void;
	message : u32;
	wParam : ^void;
	lParam : ^void;
	time : u32;
	pt : POINT;
	lPrivate : u32;
};
PIXELFORMATDESCRIPTOR :: struct
{
	nSize : u16;
	nVersion : u16;
	dwFlags : u32;
	iPixelType : u8;
	cColorBits : u8;
	cRedBits : u8;
	cRedShift : u8;
	cGreenBits : u8;
	cGreenShift : u8;
	cBlueBits : u8;
	cBlueShift : u8;
	cAlphaBits : u8;
	cAlphaShift : u8;
	cAccumBits : u8;
	cAccumRedBits : u8;
	cAccumGreenBits : u8;
	cAccumBlueBits : u8;
	cAccumAlphaBits : u8;
	cDepthBits : u8;
	cStencilBits : u8;
	cAuxBuffers : u8;
	iLayerType : u8;
	bReserved : u8;
	dwLayerMask : u32;
	dwVisibleMask : u32;
	dwDamageMask : u32;
};
LARGE_INTEGER :: union
{
	struct
	{
		lowPart : u64;
		highPart : u64;
	};
	quadPart : u64;
};

CreateFileA :: #external (
		lpFileName : ^u8,
		dwDesiredAccess : u32,
		dwShareMode : u32,
		lpSecurityAttributes : ^void,
		dwCreationDisposition : u32,
		dwFlagsAndAttributes : u32,
		hTemplateFile : ^void) -> ^void;
CloseHandle :: #external (handle : ^void);
GetFileSize :: #external (handle : ^void, lpFileSizeHigh : ^u32) -> u32;
ReadFile :: #external (hFile : ^void, lpBuffer : ^void, nNumberOfBytesToRead : u32, lpNumberOfBytesRead : ^u32, lpOverlapped : ^void) -> bool;
VirtualAlloc :: #external (lpAddress : ^void, dwSize : u64, flAllocationType : u32, flProtect : u32) -> ^void;
VirtualFree :: #external (lpAddress : ^void, dwSize : u64, dwFreeType : u32) -> bool;
AttachConsole :: #external (handle : ^void);
GetModuleHandleA :: #external (lpModuleName : ^void) -> ^void;
RegisterClassExA :: #external (wndClass : ^WNDCLASSEXA) -> u16;
CreateWindowExA :: #external (
		dwExStyle : u32,
		lpClassName : ^u8,
		lpWindowName : ^u8,
		dwStyle : u32,
		x : s32,
		y : s32,
		nWidth : s32,
		nHeight : s32,
		hWndParent : ^void,
		hMenu : ^void,
		hInstance : ^void,
		lpParam : ^void
	) -> ^void;
ShowWindow :: #external (hWnd : ^void, nCmdShow : s32);
GetLastError :: #external () -> u32;
DefWindowProcA :: #external (hWnd : ^void, uMsg : u32, wParam : u64, lParam : u64) -> u64;
PeekMessageA :: #external (lpMsg : ^MSG, hWnd : ^void, wMsgFilterMin : u32, wMsgFilterMax : u32,
		wRemoveMsg : u32) -> bool;
TranslateMessage :: #external (message : ^MSG) -> bool;
DispatchMessageA :: #external (message : ^MSG) -> s64;
LoadModule :: #external (lpLibFileName : ^u8) -> ^void;
GetProcAddress :: #external (hModule : ^void, lpProcName : ^u8) -> ^void;
GetDC :: #external (hWnd : ^void) -> ^void;
ReleaseDC :: #external (hWnd : ^void, hdc : ^void);
ChoosePixelFormat :: #external (hdc : ^void, ppfd : ^PIXELFORMATDESCRIPTOR) -> s64;
SetPixelFormat :: #external (hdc : ^void, format : s64, ppfd : ^PIXELFORMATDESCRIPTOR);
PostQuitMessage :: #external (nExitCode : s64);
DestroyWindow :: #external (hWnd : ^void) -> bool;
TerminateProcess :: #external (uExitCode : u32);
QueryPerformanceCounter :: #external (lpPerformanceCount : ^LARGE_INTEGER) -> bool;
QueryPerformanceFrequency :: #external (lpFrequency : ^LARGE_INTEGER) -> bool;
